{"version":3,"sources":["webpack:///./src/views/About.vue?5a5c","webpack:///src/views/About.vue","webpack:///./src/views/About.vue?5ed7","webpack:///./src/views/About.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","staticRenderFns","name","components","data","items","links","mini","faq","component","VAlert","VCard","VCardText","VCardTitle","VCol","VContainer","VRow"],"mappings":"8GAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACA,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,UAAU,CAACE,YAAY,cAAcC,MAAM,CAAC,OAAS,MAAM,MAAQ,kBAAkB,UAAY,OAAO,CAACP,EAAIQ,GAAG,uDAAuDJ,EAAG,MAAMJ,EAAIQ,GAAG,iCAAiCJ,EAAG,IAAI,CAACG,MAAM,CAAC,KAAO,kCAAkC,CAACP,EAAIQ,GAAG,sCAAsC,IAAI,GAAGJ,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,SAAS,CAACA,EAAG,eAAe,CAACJ,EAAIQ,GAAG,kCAAkCJ,EAAG,cAAc,CAACA,EAAG,IAAI,CAACJ,EAAIQ,GAAG,8BAA8BJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,mFAAmFJ,EAAG,MAAMJ,EAAIQ,GAAG,wFAAwFJ,EAAG,MAAMJ,EAAIQ,GAAG,qIAAqIJ,EAAG,MAAMJ,EAAIQ,GAAG,0HAA0HJ,EAAG,QAAQA,EAAG,IAAI,CAACJ,EAAIQ,GAAG,0CAA0CJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,wJAAwJJ,EAAG,MAAMJ,EAAIQ,GAAG,oIAAoIJ,EAAG,MAAMA,EAAG,QAAQA,EAAG,IAAI,CAACJ,EAAIQ,GAAG,6CAA6CJ,EAAG,MAAMA,EAAG,MAAMJ,EAAIQ,GAAG,yEAAyEJ,EAAG,MAAMJ,EAAIQ,GAAG,sFAAsFJ,EAAG,MAAMJ,EAAIQ,GAAG,mFAAmFJ,EAAG,QAAQA,EAAG,IAAI,CAACJ,EAAIQ,GAAG,qDAAqDJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,+QAA+QJ,EAAG,MAAMA,EAAG,MAAMJ,EAAIQ,GAAG,kPAAkPJ,EAAG,MAAMJ,EAAIQ,GAAG,4dAA4dJ,EAAG,MAAMA,EAAG,MAAMA,EAAG,MAAMJ,EAAIQ,GAAG,uRAAuRJ,EAAG,MAAMJ,EAAIQ,GAAG,sBAAsBJ,EAAG,MAAMJ,EAAIQ,GAAG,WAAWJ,EAAG,MAAMJ,EAAIQ,GAAG,WAAWJ,EAAG,MAAMA,EAAG,MAAMJ,EAAIQ,GAAG,8GAA8G,IAAI,IAAI,IAAI,IAC79GC,EAAkB,GCmEtB,GACEC,KAAM,QACNC,WAAY,GACZC,KAHF,WAII,MAAO,CACLC,MAAO,CACb,CAAQ,MAAR,OAAQ,KAAR,aACA,CAAQ,MAAR,QAAQ,KAAR,oBAEMC,MAAO,CAAC,OAAQ,WAAY,YAC5BC,MAAM,EACNC,IAAK,CACX,CACQ,MAAR,mBACQ,KAAR,IAEA,CACQ,MAAR,+BACQ,KAAR,aCtF0Y,I,yGCOtYC,EAAY,eACd,EACAlB,EACAU,GACA,EACA,KACA,KACA,MAIa,aAAAQ,EAAiB,QAWhC,IAAkBA,EAAW,CAACC,SAAA,KAAOC,QAAA,KAAMC,UAAA,OAAUC,WAAA,OAAWC,OAAA,KAAKC,aAAA,KAAWC,OAAA","file":"js/about.566445aa.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-row',[_c('v-col',[_c('v-alert',{staticClass:\"text-center\",attrs:{\"border\":\"top\",\"color\":\"green lighten-2\",\"elevation\":\"10\"}},[_vm._v(\" Want to hack your Switch but not sure what to do? \"),_c('br'),_vm._v(\"Check out the SDSetup guide: \"),_c('a',{attrs:{\"href\":\"https://switch.homebrew.guide\"}},[_vm._v(\"https://switch.homebrew.guide\")])])],1)],1),_c('v-row',[_c('v-col',[_c('v-card',[_c('v-card-title',[_vm._v(\"Fusee-Primary vs FSS0/Hekate\")]),_c('v-card-text',[_c('b',[_vm._v(\"Boot using fusée-primary\")]),_c('p',[_vm._v(\" This is the primary method of booting atmosphere supported by the developers. \"),_c('br'),_vm._v(\"Example1: You send Atmosphère fusée-primary payload directly to the console in RCM. \"),_c('br'),_vm._v(\"Example2: You send Hekate_CTR payload to the console in RCM, which boots Atmosphère using “payload=fusée-primary” functionality. \"),_c('br'),_vm._v(\"The scenario in example 2 is the same way of launching Atmosphère as in Example1, except it's chain-loaded by Hekate. \"),_c('br')]),_c('b',[_vm._v(\"Using Hekate to boot fusée-secondary\")]),_c('p',[_vm._v(\" Hekate can boot Atmosphère by extracting Atmosphere modules directly from fusée-secondary.bin, which can then be loaded or replaced independently. \"),_c('br'),_vm._v(\"Example3: You send Hekate_CTR payload to the console in RCM, which boots Atmosphère using “fss0=fusée-secondary” functionality. \"),_c('br'),_c('br')]),_c('p',[_vm._v(\" So the three can be resumed like this : \"),_c('br'),_c('br'),_vm._v(\"Send Payload “Fusee-primary.bin” > boot Atmosphere (fusée-secondary) \"),_c('br'),_vm._v(\"Send Payload “Hekate” > chain-boot fusee-primary.bin > boot Atmosphere (payload=) \"),_c('br'),_vm._v(\"Send Payload “Hekate” > Hekate uses fusee-secondary to boot Atmosphere (fss0=) \"),_c('br')]),_c('b',[_vm._v(\"A Special Note About EmuMMC and Hekate/DeepSea:\")]),_c('p',[_vm._v(\" Hekate (and Nyx interface of Hekate) set by DeepSea ready-to-use package lets you choose how you want to boot your console (Stock, SysMMC or emuMMC) directly from its menu. But this choice can only be applied if you launch Atmosphère with fusée-secondary (“fss0=”). \"),_c('br'),_c('br'),_vm._v(\"If you have an emuMMC folder or partition and use fusée-primary (“payload=”) method to boot your console, Atmosphère will always follow its own setting to determine whether to use sysMMC or emuMMC regardless of the user choice in Hekate. \"),_c('br'),_vm._v(\"While an alternative may be to edit Atmosphere config files to force disable emuMMC and reboot the console, the typical method is to edit “emummc/emummc.ini” and set emummc!enabled=0 or 1. 0 means disabled. 1 Means enabled. You can edit the file yourself, or use existing homebrew directly from your Homebrew Launcher menu, such as emuMMC Toggler or EmuMmcConfig and reboot the payload (fusée-primary).If you use Hekate, you could name your boot choice “Atmosphere” only. \"),_c('br'),_c('br'),_c('br'),_vm._v(\"This loss of flexibility and user unfriendliness from Hekate boot menu when using fusee-primary.bin to launch AMS is why DeepSea uses the “fss0=” booting style for syntax. Using fss0= with fusée-secondary potentially allows for the following boot modes directly from Hekate: \"),_c('br'),_vm._v(\"Stock-like sysMMC \"),_c('br'),_vm._v(\"sysCFW \"),_c('br'),_vm._v(\"emuCFW \"),_c('br'),_c('br'),_vm._v(\"This increased flexibility, all in one menu would not be possible if booting using fusée-primary.bin \")])])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container>\n    <v-row>\n      <v-col>\n        <v-alert class=\"text-center\" border=\"top\" color=\"green lighten-2\" elevation=\"10\">\n          Want to hack your Switch but not sure what to do?\n          <br />Check out the SDSetup guide:\n          <a\n            href=\"https://switch.homebrew.guide\"\n          >https://switch.homebrew.guide</a>\n        </v-alert>\n      </v-col>\n    </v-row>\n\n    <v-row>\n      <v-col>\n        <v-card>\n          <v-card-title>Fusee-Primary vs FSS0/Hekate</v-card-title>\n          <v-card-text>\n            <b>Boot using fusée-primary</b>\n            <p>\n              This is the primary method of booting atmosphere supported by the developers.\n              <br />Example1: You send Atmosphère fusée-primary payload directly to the console in RCM.\n              <br />Example2: You send Hekate_CTR payload to the console in RCM, which boots Atmosphère using “payload=fusée-primary” functionality.\n              <br />The scenario in example 2 is the same way of launching Atmosphère as in Example1, except it's chain-loaded by Hekate.\n              <br />\n            </p>\n            <b>Using Hekate to boot fusée-secondary</b>\n            <p>\n              Hekate can boot Atmosphère by extracting Atmosphere modules directly from fusée-secondary.bin, which can then be loaded or replaced independently.\n              <br />Example3: You send Hekate_CTR payload to the console in RCM, which boots Atmosphère using “fss0=fusée-secondary” functionality.\n              <br />\n              <br />\n            </p>\n            <p>\n              So the three can be resumed like this :\n              <br />\n              <br />Send Payload “Fusee-primary.bin” > boot Atmosphere (fusée-secondary)\n              <br />Send Payload “Hekate” > chain-boot fusee-primary.bin > boot Atmosphere (payload=)\n              <br />Send Payload “Hekate” > Hekate uses fusee-secondary to boot Atmosphere (fss0=)\n              <br />\n            </p>\n            <b>A Special Note About EmuMMC and Hekate/DeepSea:</b>\n            <p>\n              Hekate (and Nyx interface of Hekate) set by DeepSea ready-to-use package lets you choose how you want to boot your console (Stock, SysMMC or emuMMC) directly from its menu. But this choice can only be applied if you launch Atmosphère with fusée-secondary (“fss0=”).\n              <br />\n              <br />If you have an emuMMC folder or partition and use fusée-primary (“payload=”) method to boot your console, Atmosphère will always follow its own setting to determine whether to use sysMMC or emuMMC regardless of the user choice in Hekate.\n              <br />While an alternative may be to edit Atmosphere config files to force disable emuMMC and reboot the console, the typical method is to edit “emummc/emummc.ini” and set emummc!enabled=0 or 1. 0 means disabled. 1 Means enabled. You can edit the file yourself, or use existing homebrew directly from your Homebrew Launcher menu, such as emuMMC Toggler or EmuMmcConfig and reboot the payload (fusée-primary).If you use Hekate, you could name your boot choice “Atmosphere” only.\n              <br />\n              <br />\n              <br />This loss of flexibility and user unfriendliness from Hekate boot menu when using fusee-primary.bin to launch AMS is why DeepSea uses the “fss0=” booting style for syntax.\n              Using fss0= with fusée-secondary potentially allows for the following boot modes directly from Hekate:\n              <br />Stock-like sysMMC\n              <br />sysCFW\n              <br />emuCFW\n              <br />\n              <br />This increased flexibility, all in one menu would not be possible if booting using fusée-primary.bin\n            </p>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n// @ is an alias to /src\n\nexport default {\n  name: \"About\",\n  components: {},\n  data() {\n    return {\n      items: [\n        { title: \"Home\", icon: \"dashboard\" },\n        { title: \"About\", icon: \"question_answer\" }\n      ],\n      links: [\"Home\", \"Contacts\", \"Settings\"],\n      mini: true,\n      faq: [\n        {\n          title: \"What is DeepSea?\",\n          text: ``\n        },\n        {\n          title: \"Fusee-primary vs FSS0/Hekate\",\n          text: \"eeeee\"\n        }\n      ]\n    };\n  }\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=1d059eca&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAlert } from 'vuetify/lib/components/VAlert';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VAlert,VCard,VCardText,VCardTitle,VCol,VContainer,VRow})\n"],"sourceRoot":""}